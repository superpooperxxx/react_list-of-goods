{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","setSortType","setState","reverse","reset","this","visibleGoods","goods","sort","goods1","goods2","ALPHABET","localeCompare","LENGTH","length","console","log","getReorderedGoods","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,YAAc,SAACF,GACb,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,MAAQ,WACN,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdO,EA1DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAQC,GACzB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAOG,cAAcF,GAC9B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAOK,OAASJ,EAAOI,OAChC,QACE,OAAO,MAIThB,GACFQ,EAAaH,UAIfY,QAAQC,IAAIjB,EAAUD,GAEfQ,EAkCgBW,CAAkBtB,EAAiBU,KAAKR,OAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaL,EAASiB,WAGtCU,QAAS,kBAAM,EAAKpB,YAAYP,EAASiB,WAR3C,iCAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaL,EAASmB,SAGtCQ,QAAS,kBAAM,EAAKpB,YAAYP,EAASmB,SAR3C,4BAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAatB,IAGjBuB,QAAShB,KAAKF,QARhB,sBAaEJ,IAAaL,EAASM,MAAQF,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,MAHhB,sBAUJ,oBAAIc,UAAU,aAAd,SACE,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OACRL,UAAU,mBAFZ,SAKIK,GAFGA,iBAvFrB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2bf5edb6.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goods1, goods2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goods1.localeCompare(goods2);\n      case SortType.LENGTH:\n        return goods1.length - goods2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  setSortType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.setSortType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul className=\"goods-list\">\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                className=\"goods-list__item\"\n                key={good}\n              >\n                { good }\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}